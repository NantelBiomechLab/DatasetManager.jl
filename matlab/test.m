%% Simple example
%-----------------------

%% setup conditions
clear labels parkconds

labels.arms(1).from = 'none';
labels.arms(1).to = 'held';
labels.arms(2).to = 'norm';
labels.arms(3).from = 'excess';
labels.arms(3).to = 'active';

parkconds = TrialConditions.generate({'arms'}, labels)

%% setup subsets
clear parksubsets

genpath = '/media/allen/Seagate Backup Plus Drive/projects/Arm-role-stability/data/generated';
rawpath = '/media/allen/Seagate Backup Plus Drive/projects/Arm-role-stability/data/raw/ARMS_STAB';

parksubsets = [
    DataSubset('visual3d', 'V3DExportSource', fullfile(genpath, 'ARMS_STAB/Subject */export/park/park-*.mat')), ...
    DataSubset('dflow', 'DFlowSource', fullfile(genpath, 'DFlow/Subject */park-*.csv')), ...
    DataSubset('vicon', 'C3DSource', fullfile(rawpath, 'Subject */_/park-*.c3d'))
]

%% find trials matching conditions
clear parktrials

parktrials = DataSet.findtrials(parksubsets, parkconds, 'IgnoreFiles', { ...
    fullfile(genpath, 'DFlow/Subject 01/park-norm.csv'), ... ...
    fullfile(rawpath, 'Subject 01/_/park-norm-01.c3d') ...
})

%% Complex example
%-----------------------

%% setup conditions
clear labels conditions

labels.arms(1).from = {'NONE', 'NA'};
labels.arms(1).to = 'held';
labels.arms(2).from = {'AS', 'Norm', 'NORM'};
labels.arms(2).to = 'norm';

labels.kind(1).from = {'(?<=NONE|NORM|held|norm)S', 'BA', 'single'};
labels.kind(1).to = 'singletask';
labels.kind(2).from = {'(?<=NONE|NORM|norm|held)C', 'CO', 'dual'};
labels.kind(2).to = 'dualtask';
labels.kind(3).from = 'PO';
labels.kind(3).to = 'pert';
labels.kind(4).from = 'CP' ;
labels.kind(4).to = 'dualtask';
labels.kind(5).from = {'park', '(?<=_)TR(?=_)'};
labels.kind(5).to = 'park' ;

labels.pert_type(1).from = 'NP';
labels.pert_type(1).to = 'steadystate';
labels.pert_type(2).from = 'RT';
labels.pert_type(2).to = 'rtrip';
labels.pert_type(3).from = 'RS';
labels.pert_type(3).to = 'rslip';
labels.pert_type(4).from = 'LT';
labels.pert_type(4).to = 'ltrip';
labels.pert_type(5).from = 'LS';
labels.pert_type(5).to = 'lslip';

conditions = TrialConditions.generate({'arms','kind','pert_type'}, labels, 'Required', {'arms', 'kind'})

%% setup subsets
clear subsets

genpath = '/media/allen/Seagate Backup Plus Drive/projects/unorganized-datasets/CAREN-PD/PD Project/Data/Generated';
dflowpath = '/media/allen/Seagate Backup Plus Drive/projects/unorganized-datasets/CAREN-PD/parkinsons/raw/D-Flow';

subsets = [
    DataSubset('visual3d', 'V3DExportSource', fullfile(genpath, 'Subject */Export/*.mat')), ...
    DataSubset('dflow', 'RawDFlowPDSource', fullfile(dflowpath, 'N*/*.txt'))
]

%% find trials matching conditions
clear trials

trials = DataSet.findtrials(subsets, conditions, ...
    'SubjectFormat', '(?<=Subject |N)0*(?<subject>\d+)', 'IgnoreFiles', { ...
        fullfile(dflowpath, 'N02/20181206_1500_1554_NA_BA_NP_N02_TR01.txt'), ...
        fullfile(dflowpath, 'N02/20181206_1500_1657_AS_CP_RT_N02_TR01.txt'), ...
        fullfile(dflowpath, 'N03/20181210_1500_1519_AS_BA_NP_N03_TR01.txt'), ...
        fullfile(dflowpath, 'N03/20181210_1500_1528_AS_BA_NP_N03_TR01.txt'), ...
        fullfile(dflowpath, 'N05/20190111_1400_1455_AS_BA_NP_N05_TR01.txt'), ...
        fullfile(dflowpath, 'N05/20190111_1400_1510_AS_CO_NP_N05_TR01.txt'), ...
        fullfile(dflowpath, 'N05/20190111_1400_1521_AS_CP_RS_N05_TR01.txt'), ...
        fullfile(dflowpath, 'N06/20190115_1400_1507_NA_PO_RT_N06_TR01.txt'), ...
        fullfile(dflowpath, 'N06/20190115_1400_1516_AS_CP_LT_N06_TR01.txt'), ...
        fullfile(dflowpath, 'N06/20190115_1400_1521_AS_PO_RS_N06_TR01.txt'), ...
        fullfile(dflowpath, 'N06/20190115_1400_1526_NA_PO_RS_N06_TR01.txt'), ...
        fullfile(dflowpath, 'N06/20190115_1400_1545_AS_TR_NP_N06_TR01.txt'), ...
        fullfile(dflowpath, 'N08/20190128_1500_1542_NA_PO_LT_N08_TR01.txt'), ...
        fullfile(dflowpath, 'N09/20190204_1400_1455_NA_BA_NP_N09_TR01.txt'), ...
        fullfile(dflowpath, 'N012/20190304_1500_1515_AS_BA_NP_N012_TR01.txt'), ...
        fullfile(dflowpath, 'N012/20190304_1500_1526_AS_CO_NP_N012_TR01.txt'), ...
        fullfile(dflowpath, 'N012/20190304_1500_1641_NA_TR_NP_N012_TR01.txt'), ...
        fullfile(dflowpath, 'N014/20190312_1400_1416_NA_BA_NP_N014_TR01.txt'), ...
        fullfile(dflowpath, 'N015/20190318_0300_1543_AS_BA_NP_N015_TR01.txt'), ...
        fullfile(dflowpath, 'N015/20190318_0300_1608_NA_PO_RT_N015_TR01.txt'), ...
        fullfile(dflowpath, 'N017/20190426_1400_1435_AS_BA_NP_N017_TR01.txt'), ...
        fullfile(dflowpath, 'N017/20190426_1400_1453_NA_CO_NP_N017_TR01.txt'), ...
        fullfile(dflowpath, 'N017/20190426_1400_1457_NA_CO_NP_N017_TR01.txt'), ...
        fullfile(dflowpath, 'N017/20190426_1400_1607_AS_TR_NP_N017_TR01.txt'), ...
        fullfile(dflowpath, 'N018/20190430_1000_1039_AS_BA_NP_N018_TR01.txt'), ...
        fullfile(dflowpath, 'N018/20190430_1000_1123_NA_PO_LS_N018_TR01.txt'), ...
        fullfile(dflowpath, 'N019/20190430_1400_1433_AS_BA_NP_N019_TR01.txt'), ...
        fullfile(dflowpath, 'N019/20190430_1400_1448_NA_CO_NP_N019_TR01.txt'), ...
        fullfile(dflowpath, 'N019/20190430_1400_1456_AS_CP_LS_N019_TR01.txt'), ...
        fullfile(dflowpath, 'N019/20190430_1400_1523_AS_PO_LS_N019_TR01.txt'), ...
        fullfile(dflowpath, 'N019/20190430_1500_1506_AS_BA_NP_N019_TR01.txt'), ...
        fullfile(dflowpath, 'N019/20190430_1500_1515_AS_BA_NP_N019_TR01.txt'), ...
        fullfile(dflowpath, 'N019/20190430_1500_1520_AS_BA_NP_N019_TR01.txt'), ...
        fullfile(dflowpath, 'N020/20190509_1000_1048_AS_BA_NP_N020_TR01.txt'), ...
        fullfile(dflowpath, 'N020/20190509_1000_1113_NA_CP_RS_N020_TR01.txt'), ...
        fullfile(dflowpath, 'N020/20190509_1000_1153_AS_PO_LT_N020_TR01.txt'), ...
    }, 'DefaultConditions', containers.Map('pert_type', 'steadystate'))
